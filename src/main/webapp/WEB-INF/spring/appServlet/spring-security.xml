<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <http auto-config="true" authentication-manager-ref="authenticationManagerForRest">
        <access-denied-handler error-page="/access-denied" />
        <intercept-url pattern="/customers**" access="ROLE_ADMIN" />
        <intercept-url pattern="/customer/**" access="ROLE_ADMIN" />
        <intercept-url pattern="/semesters/**" access="ROLE_ADMIN" />
        <form-login login-page="/login" default-target-url="/welcome"
                            authentication-failure-url="/login?error" username-parameter="username"
                            password-parameter="password" />
        <logout logout-success-url="/login?logout" />
        <!-- enable csrf protection -->
        <csrf />
        <headers>
            <cache-control />
        </headers>
    </http>

    <!-- Custom User details service which is provide the user data -->
    <beans:bean id="customUserDetailsService"
                    class="com.app.studio.service.impl.CustomUserDetailsServiceImpl">
    </beans:bean>

    <!-- Authentication manager -->
    <authentication-manager alias="authenticationManagerForRest">
        <authentication-provider user-service-ref="customUserDetailsService" />
    </authentication-manager>

    <!-- Enable the annotations for defining the secure role -->
    <global-method-security secured-annotations="enabled" />

</beans:beans>